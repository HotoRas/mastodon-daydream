name: Build container image
on:
  workflow_dispatch:
  push:
    branches:
      - 'qdon-glitch-beta'
      - 'qdon-glitch'
  pull_request:
    paths:
      - .github/workflows/build-image.yml
      - Dockerfile
permissions:
  contents: read
  packages: write

jobs:
  build-image:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
      - uses: docker/setup-buildx-action@v2

      - name: Log in to the Github Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: qdon/glitch
          # Only tag with latest when ran against the latest stable branch
          # This needs to be updated after each minor version release
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/v4.1.') && 'auto' || 'false' }}
          tags: |
            type=ref,event=branch
            type=raw,value=beta,enable=${{ github.ref == format('refs/heads/{0}', 'qdon-glitch-beta') }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=edge,branch=qdon-glitch-beta

      - name: Generate version suffix
        id: version_vars
        if: github.repository == 'tribela/mastodon' && github.event_name == 'push' && github.ref_name == 'qdon-glitch-beta'
        run: |
          echo mastodon_version_suffix=+edge-$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT

      - uses: docker/build-push-action@v4
        with:
          context: .
          build-args: MASTODON_VERSION_SUFFIX=${{ steps.version_vars.outputs.mastodon_version_suffix }}
          provenance: false
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=qdon/glitch:edge
          cache-to: type=inline,mode=max
